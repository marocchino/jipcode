{
  "version": 3,
  "sources": ["../node_modules/node-fetch/browser.js", "../index.ts"],
  "sourcesContent": ["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;", "import fetch from \"node-fetch\";\nconst VERSION = \"2.0.31\";\nconst ZIPCODE_URL = `https://marocchino.github.io/jipcode/${VERSION}`;\n\ntype Option = {\n  prefectureCode?: boolean;\n};\n\ntype Zipcode = {\n  zipcode: string;\n  prefecture: string;\n  prefectureCode?: number;\n  city: string;\n  town: string;\n};\n\nexport const prefectureCode: { [key: string]: number } = {\n  \u5317\u6D77\u9053: 1,\n  \u9752\u68EE\u770C: 2,\n  \u5CA9\u624B\u770C: 3,\n  \u5BAE\u57CE\u770C: 4,\n  \u79CB\u7530\u770C: 5,\n  \u5C71\u5F62\u770C: 6,\n  \u798F\u5CF6\u770C: 7,\n  \u8328\u57CE\u770C: 8,\n  \u6803\u6728\u770C: 9,\n  \u7FA4\u99AC\u770C: 10,\n  \u57FC\u7389\u770C: 11,\n  \u5343\u8449\u770C: 12,\n  \u6771\u4EAC\u90FD: 13,\n  \u795E\u5948\u5DDD\u770C: 14,\n  \u65B0\u6F5F\u770C: 15,\n  \u5BCC\u5C71\u770C: 16,\n  \u77F3\u5DDD\u770C: 17,\n  \u798F\u4E95\u770C: 18,\n  \u5C71\u68A8\u770C: 19,\n  \u9577\u91CE\u770C: 20,\n  \u5C90\u961C\u770C: 21,\n  \u9759\u5CA1\u770C: 22,\n  \u611B\u77E5\u770C: 23,\n  \u4E09\u91CD\u770C: 24,\n  \u6ECB\u8CC0\u770C: 25,\n  \u4EAC\u90FD\u5E9C: 26,\n  \u5927\u962A\u5E9C: 27,\n  \u5175\u5EAB\u770C: 28,\n  \u5948\u826F\u770C: 29,\n  \u548C\u6B4C\u5C71\u770C: 30,\n  \u9CE5\u53D6\u770C: 31,\n  \u5CF6\u6839\u770C: 32,\n  \u5CA1\u5C71\u770C: 33,\n  \u5E83\u5CF6\u770C: 34,\n  \u5C71\u53E3\u770C: 35,\n  \u5FB3\u5CF6\u770C: 36,\n  \u9999\u5DDD\u770C: 37,\n  \u611B\u5A9B\u770C: 38,\n  \u9AD8\u77E5\u770C: 39,\n  \u798F\u5CA1\u770C: 40,\n  \u4F50\u8CC0\u770C: 41,\n  \u9577\u5D0E\u770C: 42,\n  \u718A\u672C\u770C: 43,\n  \u5927\u5206\u770C: 44,\n  \u5BAE\u5D0E\u770C: 45,\n  \u9E7F\u5150\u5CF6\u770C: 46,\n  \u6C96\u7E04\u770C: 47,\n};\n\nexport const locate = async (\n  zipcode: string,\n  option: Option = {}\n): Promise<Zipcode[]> => {\n  if (zipcode.length !== 7 || !/^\\d+$/.test(zipcode)) {\n    return [];\n  }\n\n  const url = `${ZIPCODE_URL}/${zipcode.slice(0, 3)}.csv.json`;\n\n  // get json\n  try {\n    const response = await fetch(url);\n    const json = (await response.json()) as string[][];\n    const addressesArray = json.filter((address) => address[0] === zipcode);\n\n    if (option.prefectureCode) {\n      return addressesArray.map(extendedAddressFrom);\n    } else {\n      return addressesArray.map(basicAddressFrom);\n    }\n  } catch (e) {\n    return [];\n  }\n};\n\nconst basicAddressFrom = (address: string[]): Zipcode => ({\n  zipcode: address[0],\n  prefecture: address[1],\n  city: address[2],\n  town: address[3],\n});\n\nconst extendedAddressFrom = (address: string[]): Zipcode => {\n  const basic = basicAddressFrom(address);\n  return {\n    ...basic,\n    prefectureCode: prefectureCode[basic.prefecture],\n  };\n};\n"],
  "mappings": "ygBAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAGA,IAAIC,EAAY,UAAY,CAI3B,GAAI,OAAO,KAAS,IAAe,OAAO,KAC1C,GAAI,OAAO,OAAW,IAAe,OAAO,OAC5C,GAAI,OAAOC,EAAW,IAAe,OAAOA,EAC5C,MAAM,IAAI,MAAM,gCAAgC,CACjD,EAEIA,EAASD,EAAU,EAEvBD,EAAO,QAAUD,EAAUG,EAAO,MAG9BA,EAAO,QACVH,EAAQ,QAAUG,EAAO,MAAM,KAAKA,CAAM,GAG3CH,EAAQ,QAAUG,EAAO,QACzBH,EAAQ,QAAUG,EAAO,QACzBH,EAAQ,SAAWG,EAAO,WCxB1B,IAAAC,EAAkB,OACZC,EAAU,SACVC,EAAc,wCAAwCD,IAc/CE,EAA4C,CACvD,mBAAK,EACL,mBAAK,EACL,mBAAK,EACL,mBAAK,EACL,mBAAK,EACL,mBAAK,EACL,mBAAK,EACL,mBAAK,EACL,mBAAK,EACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,yBAAM,GACN,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,yBAAM,GACN,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,mBAAK,GACL,yBAAM,GACN,mBAAK,EACP,EAEaC,EAAS,MACpBC,EACAC,EAAiB,CAAC,IACK,CACvB,GAAID,EAAQ,SAAW,GAAK,CAAC,QAAQ,KAAKA,CAAO,EAC/C,MAAO,CAAC,EAGV,IAAME,EAAM,GAAGL,KAAeG,EAAQ,MAAM,EAAG,CAAC,aAGhD,GAAI,CAGF,IAAMG,GADQ,MADG,QAAM,EAAAC,SAAMF,CAAG,GACH,KAAK,GACN,OAAQG,GAAYA,EAAQ,KAAOL,CAAO,EAEtE,OAAIC,EAAO,eACFE,EAAe,IAAIG,CAAmB,EAEtCH,EAAe,IAAII,CAAgB,CAE9C,MAAE,CACA,MAAO,CAAC,CACV,CACF,EAEMA,EAAoBF,IAAgC,CACxD,QAASA,EAAQ,GACjB,WAAYA,EAAQ,GACpB,KAAMA,EAAQ,GACd,KAAMA,EAAQ,EAChB,GAEMC,EAAuBD,GAA+B,CAC1D,IAAMG,EAAQD,EAAiBF,CAAO,EACtC,MAAO,CACL,GAAGG,EACH,eAAgBV,EAAeU,EAAM,WACvC,CACF",
  "names": ["require_browser", "__commonJSMin", "exports", "module", "getGlobal", "global", "import_node_fetch", "VERSION", "ZIPCODE_URL", "prefectureCode", "locate", "zipcode", "option", "url", "addressesArray", "fetch", "address", "extendedAddressFrom", "basicAddressFrom", "basic"]
}
